#!/usr/bin/env node
var amqp    = require('amqplib');

var waitForConnection = amqp.connect('amqp://localhost');

var radioId = process.argv[2];

if (!radioId) {
  console.error('Usage bin/control <uuid>\n  UUID of radio instance to control');
  process.exit();
}

var channel;

var command = JSON.stringify( {player: 'random'} );

waitForConnection.then(function (connection) {
  var waitForChannel = connection.createConfirmChannel();
  waitForChannel.then(function (ch) {
    channel = ch;
    var waitForExchange = channel.assertExchange('radiodan', 'topic');
    waitForExchange.then(function () {
      channel.publish('radiodan', topicForId(radioId), new Buffer(command), {}, done);
      console.log('published %o to %o', command, topicForId(radioId));
    }).fail(function () {
      console.error('error')
    });
  });
});

function done(err, ok) {
  console.log('Done');
  process.exit();
}

function topicForId(id) {
  return 'radio.' + id + '.command';
}
