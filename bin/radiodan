#!/usr/bin/env node
var program = require('commander'),
    path    = require('path'),
    package = require('../package.json'),
    amqp    = require('amqplib'),
    Q       = require('q'),
    MessagingClient = require('../lib/messaging-client'),
    configFile = 'config.json';

program
  .version(package.version)
  .usage('[options] config_file')
  .parse(process.argv);

switch(true) {
  case program.args.length == 1:
    configFile = program.args[0];
    break;
  case program.args.length > 1:
    program.help();
    break;
  default:
    //No config leaves us with defaults
}

process.on('SIGINT', function () {
  process.exit();
});

process.on('uncaughtException', function (e) {
  console.error(e.stack);
  process.exit();
});

var Radiodan = require(__dirname+'/../lib/radiodan'),
    RadioController = require(__dirname+'/../lib/radio-controller'),
    radios = [];

try {
  var config = require(path.relative(__dirname, configFile));
} catch(err) {
  program.help();
  process.exit(1);
}


var radios = config.radios.map(function(radio, i) {
  var client = MessagingClient.create(),
      mergedConfig = mergeObjects(config.defaults, radio);

  // TODO: Change this name
  var radiodan = Radiodan.create(mergedConfig).start();
  var controller = RadioController.create(radiodan, client);

  return radiodan;
});

function mergeObjects(defaultObj, specificObj) {
  var obj = JSON.parse(JSON.stringify(defaultObj)),
      cleanSpecificObj = JSON.parse(JSON.stringify(specificObj));

  Object.keys(cleanSpecificObj).forEach(function (key) {
    obj[key] = cleanSpecificObj[key];
  });

  return obj;
}

