#!/usr/bin/env node
var program = require('commander'),
    path    = require('path'),
    package = require('../package.json'),
    context = require('rabbit.js').createContext('amqp://localhost'),
    configFile = 'config.json';

program
  .version(package.version)
  .usage('[options] config_file')
  .parse(process.argv);

switch(true) {
  case program.args.length == 1:
    configFile = program.args[0];
    break;
  case program.args.length > 1:
    program.help();
    break;
  default:
    //No config leaves us with defaults
}

var Radiodan = require(__dirname+'/../lib/radiodan'),
    radios = [];

try {
  var config = require(path.relative(__dirname, configFile));
} catch(err) {
  program.help();
  process.exit(1);
}

var radios = config.radios.map(function(radio, i) {
  var radioConfig = config.paths;
  radioConfig.name = radio.name;

  var radiodan = Radiodan.create(config.paths, radio).start();

/*
  radiodan.ready().then(function() {
    radiodan.sendCommands([
      ['clear'], ['add', ['iTunes']], ['random', ['1']], ['play']
    ]);
  });
*/

  return radiodan;
})


context.on('ready', function() {
  var pub = context.socket('PUB'), sub = context.socket('SUB');
  //sub.pipe(process.stdout);

  sub.setEncoding('utf8');
  sub.on('data', function(commandJSON){
    command = JSON.parse(commandJSON);
    switch(command.player) {
      case 'random':
        console.log("randomz", command.playerId);
        var radio = radios[command.playerId];
        radio.ready().then(function() {
          console.log('sending');
          radio.sendCommands([
            ['clear'], ['add', ['iTunes']], ['random', ['1']], ['play']
          ]);
        });
        break;
      default:
        console.log("Don't know what to do with" + command.player);
    }
  });

  sub.connect('commands', function() {
    pub.connect('commands', function() {
      pub.write(JSON.stringify({playerId: 1, player: 'random'}), 'utf8');
    });
  });
});

